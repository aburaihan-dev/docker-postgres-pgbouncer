version: '3.7'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  pgbouncer:
    image: edoburu/pgbouncer:latest
    container_name: pgbouncer
    environment:
      AUTH_TYPE: scram-sha-256
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      DB_HOST: ${DB_HOST}
      POOL_MODE: ${POOL_MODE}
      MAX_CLIENT_CONN: ${MAX_CLIENT_CONN}
      DEFAULT_POOL_SIZE: ${DEFAULT_POOL_SIZE}
      SERVER_IDLE_TIMEOUT: ${SERVER_IDLE_TIMEOUT}
    depends_on:
      - postgres
    networks:
      - backend
    ports:
      - "6432:5432"
    healthcheck:
      test: ["CMD", "pgbouncer", "show", "databases"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  pgdata:
    name: pgdata

networks:
  backend:
    name: backend
